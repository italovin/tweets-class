// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace tweetsclass.Migrations
{
    [DbContext(typeof(ConnectionDbContext))]
    [Migration("20240714001255_AddDbFactory")]
    partial class AddDbFactory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.ORM.AccessKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HashString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Revoked")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccessKeys");
                });

            modelBuilder.Entity("Models.ORM.Labeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Label")
                        .HasColumnType("int");

                    b.Property<int>("PhraseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhraseId");

                    b.ToTable("Labelings");
                });

            modelBuilder.Entity("Models.ORM.Phrase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Phrases");
                });

            modelBuilder.Entity("Models.ORM.Labeling", b =>
                {
                    b.HasOne("Models.ORM.Phrase", "Phrase")
                        .WithMany("Labelings")
                        .HasForeignKey("PhraseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phrase");
                });

            modelBuilder.Entity("Models.ORM.Phrase", b =>
                {
                    b.Navigation("Labelings");
                });
#pragma warning restore 612, 618
        }
    }
}
